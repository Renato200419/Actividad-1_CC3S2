version: '3.8'  # Especifica la versión del archivo de configuración de Docker Compose

services:  
  app-dev:  # Servicio para la aplicación en desarrollo
    build: .  # Construye la imagen Docker desde el Dockerfile en el directorio actual
    ports:
      - "3000:3000"  # Mapea el puerto 3000 del contenedor al puerto 3000 del host
    environment:
      - NODE_ENV=development  # Establece la variable de entorno NODE_ENV a 'development'
      - DEBUG=true  # Habilita el debugging
    volumes:
      - .:/app  # Monta el directorio actual en el contenedor para desarrollo activo
      - /app/node_modules  # Utiliza un volumen anónimo para evitar sobreescribir el nodo_modules del host

  app-prod:  # Servicio para la aplicación en producción
    build: .  # Construye la imagen Docker desde el Dockerfile en el directorio actual
    ports:
      - "3000:3000"  # Mapea el puerto 3000 del contenedor al puerto 3000 del host
    environment:
      - NODE_ENV=production  # Establece la variable de entorno NODE_ENV a 'production'

  prometheus:  # Servicio para Prometheus
    image: prom/prometheus  # Usa la imagen oficial de Prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml  # Mapea el archivo de configuración de Prometheus
    ports:
      - "9090:9090"  # Mapea el puerto 9090 del contenedor al puerto 9090 del host

  grafana:  # Servicio para Grafana
    image: grafana/grafana  # Usa la imagen oficial de Grafana
    ports:
      - "3001:3000"  # Mapea el puerto 3001 del host al puerto 3000 de Grafana dentro del contenedor
